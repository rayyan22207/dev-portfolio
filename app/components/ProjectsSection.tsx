'use client';

import { motion } from 'framer-motion';

export default function ProjectsSection() {
	return (
		<section className="py-20 px-4">
			<div className="max-w-6xl mx-auto">
				<motion.h2 initial={{ opacity: 0 }} whileInView={{ opacity: 1 }} viewport={{ once: true }} className="text-3xl font-bold mb-16 text-center">
					Full Stack Projects by Me
				</motion.h2>

				<div className="space-y-16">

					{/* E-commerce API Backend */}
					<motion.div initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} className="bg-gray-900/50 rounded-xl overflow-hidden border border-gray-800">
						<div className="p-8">
							<div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
								<div className="space-y-6">
									<div>
										<h3 className="text-2xl font-bold mb-4">üõí Django E-commerce API Backend</h3>
										<p className="text-gray-400">
											A scalable, modular e-commerce backend inspired by the SaaS Foundations repo. Built using Django REST Framework, Tailwind, and JWT auth. Future-proofed for Paddle integration, analytics, and multi-tenant SaaS.
										</p>
									</div>

									<div className="grid grid-cols-2 gap-6">
										<div>
											<h4 className="text-sm font-semibold text-blue-400 mb-3">Tech Stack</h4>
											<ul className="space-y-2 text-sm text-gray-400">
												<li>‚Ä¢ Django + DRF</li>
												<li>‚Ä¢ Tailwind CSS</li>
												<li>‚Ä¢ PostgreSQL (prod)</li>
												<li>‚Ä¢ JWT Authentication</li>
											</ul>
										</div>
										<div>
											<h4 className="text-sm font-semibold text-purple-400 mb-3">Planned Features</h4>
											<ul className="space-y-2 text-sm text-gray-400">
												<li>‚Ä¢ Paddle Billing</li>
												<li>‚Ä¢ Analytics & Activity Tracking</li>
												<li>‚Ä¢ GraphQL API Layer</li>
												<li>‚Ä¢ Multi-Tenant Mode</li>
											</ul>
										</div>
									</div>

									<div className="space-y-3">
										<h4 className="text-sm font-semibold text-teal-400">Highlights</h4>
										<ul className="space-y-2 text-sm text-gray-400">
											<li>‚Ä¢ Modular app structure</li>
											<li>‚Ä¢ RESTful API endpoints</li>
											<li>‚Ä¢ Based on SaaS Foundations (MIT License)</li>
											<li>‚Ä¢ Live on Vercel (planned)</li>
										</ul>
									</div>
								</div>

								<div className="bg-black/30 rounded-xl p-6">
									<h4 className="text-sm font-semibold text-gray-400 mb-4">API Structure Preview</h4>
									<div className="aspect-[4/3] bg-black/50 rounded-lg p-4 text-sm text-gray-400">
										/api/v1/auth/login<br />
										/api/v1/catalog/products<br />
										/api/v1/cart/items<br />
										/api/v1/orders/<br />
										...and more
									</div>
								</div>
							</div>
						</div>
					</motion.div>

					{/* Django Real-Time Blog */}
					<motion.div initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} className="bg-gray-900/50 rounded-xl overflow-hidden border border-gray-800">
						<div className="p-8">
							<div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
								<div className="space-y-6">
									<div>
										<h3 className="text-2xl font-bold mb-4">üìù Django Real-Time Blog</h3>
										<p className="text-gray-400">
											A full-featured blog app with real-time notifications powered by Django Channels and Daphne. Includes advanced user profiles, likes, comments, and WebSocket-based alert system.
										</p>
									</div>

									<div className="grid grid-cols-2 gap-6">
										<div>
											<h4 className="text-sm font-semibold text-blue-400 mb-3">Core Features</h4>
											<ul className="space-y-2 text-sm text-gray-400">
												<li>‚Ä¢ Blog posts & image uploads</li>
												<li>‚Ä¢ Like & comment system</li>
												<li>‚Ä¢ Real-time notifications</li>
												<li>‚Ä¢ Follows & blocks</li>
											</ul>
										</div>
										<div>
											<h4 className="text-sm font-semibold text-purple-400 mb-3">Tech Stack</h4>
											<ul className="space-y-2 text-sm text-gray-400">
												<li>‚Ä¢ Django 4+</li>
												<li>‚Ä¢ Django Channels + Daphne</li>
												<li>‚Ä¢ SQLite / PostgreSQL</li>
												<li>‚Ä¢ Bootstrap 5</li>
											</ul>
										</div>
									</div>

									<div className="space-y-3">
										<h4 className="text-sm font-semibold text-teal-400">Live Events</h4>
										<ul className="space-y-2 text-sm text-gray-400">
											<li>‚Ä¢ New post from followed user</li>
											<li>‚Ä¢ Like/Comment alerts</li>
											<li>‚Ä¢ Tip of the Day via ZenQuotes API</li>
										</ul>
									</div>
								</div>

								<div className="bg-black/30 rounded-xl p-6">
									<h4 className="text-sm font-semibold text-gray-400 mb-4">Real-Time Architecture</h4>
									<div className="aspect-[4/3] bg-black/50 rounded-lg p-4 text text-gray-400 text-xs leading-relaxed">
										<span className="block mb-2">üß© WebSocket Flow</span>
										User connects ‚Üí WebSocket server (Daphne) ‚Üí Subscribed to user ID channel

										<hr className="my-3 border-gray-700" />

										<span className="block mb-2">‚öôÔ∏è Event Triggers (Planned)</span>
										‚Ä¢ When followed user posts ‚Üí <code>signals.py</code> ‚Üí WebSocket push<br />
										‚Ä¢ When user likes a post/comment ‚Üí Notification object (future)<br />
										‚Ä¢ When someone comments on your post ‚Üí WebSocket ‚Üí Browser push
									</div>
								</div>

							</div>
						</div>
					</motion.div>

					{/* Stock & Sales Management System */}
					<motion.div initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} className="bg-gray-900/50 rounded-xl overflow-hidden border border-gray-800">
						<div className="p-8">
							<div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
								<div className="space-y-6">
									<div>
										<h3 className="text-2xl font-bold mb-4">üì¶ Stock & Sales Management System</h3>
										<p className="text-gray-400">
											Internal tool developed for business workflows like inventory tracking, sales reports, warehouse management, and user-specific invoicing. Built for Hashmi Surma (proprietary).
										</p>
									</div>

									<div className="grid grid-cols-2 gap-6">
										<div>
											<h4 className="text-sm font-semibold text-blue-400 mb-3">Modules</h4>
											<ul className="space-y-2 text-sm text-gray-400">
												<li>‚Ä¢ User authentication & roles</li>
												<li>‚Ä¢ Invoice generation</li>
												<li>‚Ä¢ Stock-in / Stock-out flow</li>
												<li>‚Ä¢ Product / Warehouse linkage</li>
											</ul>
										</div>
										<div>
											<h4 className="text-sm font-semibold text-purple-400 mb-3">Tech Stack</h4>
											<ul className="space-y-2 text-sm text-gray-400">
												<li>‚Ä¢ Django</li>
												<li>‚Ä¢ PostgreSQL / Neon</li>
												<li>‚Ä¢ Tailwind + HTML/CSS</li>
												<li>‚Ä¢ Deployed on Railway</li>
											</ul>
										</div>
									</div>

									<div className="space-y-3">
										<h4 className="text-sm font-semibold text-teal-400">Outcomes</h4>
										<ul className="space-y-2 text-sm text-gray-400">
											<li>‚Ä¢ Reduced manual stock errors</li>
											<li>‚Ä¢ Improved invoice traceability</li>
											<li>‚Ä¢ Faster warehouse-level audits</li>
										</ul>
									</div>
								</div>

								<div className="bg-black/30 rounded-xl p-6">
									<h4 className="text-sm font-semibold text-gray-400 mb-4">System Use Case</h4>
									<div className="aspect-[4/3] bg-black/50 rounded-lg p-4 text-sm text-gray-400">
										Staff login ‚Üí Add product ‚Üí Track movement ‚Üí Print invoice ‚Üí Reconcile warehouse ‚Üí Reports
									</div>
								</div>
							</div>
						</div>
					</motion.div>

				</div>
			</div>
		</section>
	);
}
